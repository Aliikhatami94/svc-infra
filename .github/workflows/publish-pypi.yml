name: Auto publish to PyPI on main

on:
  push:
    branches: [ main ]

concurrency:
  group: publish-pypi
  cancel-in-progress: false

jobs:
  release:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write   # for committing/tagging version bumps
      id-token: write   # REQUIRED for PyPI Trusted Publisher (OIDC)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install Poetry 2.x deterministically
      - name: Install Poetry 2.x
        run: |
          python -m pip install --upgrade pip pipx
          pipx install "poetry==2.0.1"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          poetry --version

      # Keep the lockfile in sync with pyproject (no flags; works on Poetry 2)
      - name: Refresh lockfile (no update)
        run: poetry lock

      - name: Install deps (no dev)
        run: poetry install --no-root --only main --sync

      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Bump patch version on every push to main
      - name: Bump patch version
        id: bump
        run: |
          poetry version patch
          NEW_VER=$(poetry version -s)
          echo "new_version=$NEW_VER" >> "$GITHUB_OUTPUT"

      - name: Commit version bump
        run: |
          NEW_VER="${{ steps.bump.outputs.new_version }}"
          git add pyproject.toml poetry.lock || true
          git commit -m "ci: release v${NEW_VER}" || echo "No changes to commit"
          git tag "v${NEW_VER}" || echo "Tag exists; continuing"
          git push || true
          git push --tags || true

      - name: Build distributions
        run: poetry build

      # Publish to PyPI via Trusted Publisher / OIDC (no API token needed)
      - name: Publish to PyPI via OIDC
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist